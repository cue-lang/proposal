{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c1498668_f8161920",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-06-30T13:48:40Z",
      "side": 1,
      "message": "Thanks for this! This is an initial pass through of review comments.",
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b96aa169_1faf13cb",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-06-30T13:48:40Z",
      "side": 1,
      "message": "This title doesn\u0027t really make sense to me grammatically.",
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d30dc3d5_f11eb813",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2025-07-07T14:30:57Z",
      "side": 1,
      "message": "How about:\n\n```\nProposal: add a `try` construct to handle optional fields\n```",
      "parentUuid": "b96aa169_1faf13cb",
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e86d8444_98a08ad7",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-07-11T12:27:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d30dc3d5_f11eb813",
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1e2b6d5_c136ec32",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-06-30T13:48:40Z",
      "side": 1,
      "message": "These long lines are hard to read in gerrit (no word wrap) and also make it harder to comment on individual parts of the paragraph.",
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f435ab05_bc941382",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-07-11T12:27:56Z",
      "side": 1,
      "message": "The problem is that GitHub MD, where it will be published, doesn\u0027t handle broken up lines well. But perhaps we could use some github preprocessor of sorts.\n\nI prefer broken up lines as well.\n\nChanged all lines using Go style, also in the alias proposal.",
      "parentUuid": "b1e2b6d5_c136ec32",
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e718ac87_5696faa9",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-06-30T13:48:40Z",
      "side": 1,
      "message": "It doesn\u0027t actually currently look like this FWIW, because the `exists` function isn\u0027t there yet.",
      "range": {
        "startLine": 13,
        "startChar": 306,
        "endLine": 13,
        "endChar": 331
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "322e14e4_97abfb07",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-07-11T12:27:56Z",
      "side": 1,
      "message": "I was working on it concurrently and figured that would be out before this doc. 😊\n\nModified. Also explained exists a bit. Please note that I only explained exists for understanding the proposal. It is not intended to fully define it.",
      "parentUuid": "e718ac87_5696faa9",
      "range": {
        "startLine": 13,
        "startChar": 306,
        "endLine": 13,
        "endChar": 331
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98329de0_67bb50fa",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-06-30T13:48:40Z",
      "side": 1,
      "message": "It would be generally more common to write this the other way around, with the default value being `foo[a.b]`, otherwise this will almost always be \"default\" which is not that useful. We usually wish to fall back to the default value only if the expression cannot be evaluated.\n\nI\u0027d suggest using `\"fallback\"` instead of `\"default\"` to emphasise the distinction.",
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b61f6906_fb47f2ca",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-07-11T12:27:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "98329de0_67bb50fa",
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7248080_de881d52",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2025-07-07T14:30:57Z",
      "side": 1,
      "message": "nit: per Roger\u0027s input above, use \"fallback\" here",
      "range": {
        "startLine": 26,
        "startChar": 284,
        "endLine": 26,
        "endChar": 291
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ac5ad94_6941def1",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-07-11T12:27:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d7248080_de881d52",
      "range": {
        "startLine": 26,
        "startChar": 284,
        "endLine": 26,
        "endChar": 291
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95e92fb1_a1932b22",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-06-30T13:48:40Z",
      "side": 1,
      "message": "Is the `a` self-reference really necessary here? It seems to make things harder to understand to me, and I\u0027m not sure it helps much. Similarly the fact that the `a` field is nested. In fact, I\u0027m pretty sure the inner `a.b` is an mistake: it refers to a different `a` than the `a` in `exists(foo[a.b])`",
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ccf9b94_60e8611f",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-07-11T12:27:56Z",
      "side": 1,
      "message": "Indeed, there should not be a self-reference. Fixed.",
      "parentUuid": "95e92fb1_a1932b22",
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "239783b6_31dc431a",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-06-30T13:48:40Z",
      "side": 1,
      "message": "Again, too many `a`s... AFAICS `exists(a)` is always true here because it\u0027s referring to the regular field `a` which definitely does exist.",
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "00cf6484_137812b7",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-07-11T12:27:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "239783b6_31dc431a",
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a07a7f13_ef2a1a8e",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-06-30T13:48:40Z",
      "side": 1,
      "message": "Personally, I find these long bold passages somewhat distracting.",
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f36f3bd3_63cb5c8c",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2025-07-07T14:30:57Z",
      "side": 1,
      "message": "I tend to agree. The use of bold text should be very sparse. If every other paragraph has bold text, I find it too distracting, almost like there\u0027s no priority when a quarter of the text is high priority.\n\nYou could consider using italics, but I\u0027d also try avoiding their overuse.",
      "parentUuid": "a07a7f13_ef2a1a8e",
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e9558ff_573e3f63",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-07-11T12:27:56Z",
      "side": 1,
      "message": "unbolded",
      "parentUuid": "f36f3bd3_63cb5c8c",
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ec06b74_a1d04bff",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2025-07-07T14:30:57Z",
      "side": 1,
      "message": "as before, all of these examples should use \"fallback\"",
      "range": {
        "startLine": 50,
        "startChar": 31,
        "endLine": 50,
        "endChar": 38
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dea13eee_dc9b1746",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-07-11T12:27:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7ec06b74_a1d04bff",
      "range": {
        "startLine": 50,
        "startChar": 31,
        "endLine": 50,
        "endChar": 38
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea756990_257f81db",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2025-07-07T14:30:57Z",
      "side": 1,
      "message": "link to that proposal?",
      "range": {
        "startLine": 52,
        "startChar": 50,
        "endLine": 52,
        "endChar": 64
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7e662ddd_1a9f436f",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-07-11T12:27:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ea756990_257f81db",
      "range": {
        "startLine": 52,
        "startChar": 50,
        "endLine": 52,
        "endChar": 64
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b5cb330_d543bf22",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-06-30T13:48:40Z",
      "side": 1,
      "message": "I find this somewhat confusing. To me, a field reference is generally of the form `x.field` or `x[fieldExpr]`; a general reference `foo` _might_ be a field reference, but could also refer to non-fields such as a let expression or a package. It would be good to be clear about these different aspects.",
      "range": {
        "startLine": 58,
        "startChar": 33,
        "endLine": 58,
        "endChar": 63
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a1149e5d_6cc12bd4",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-07-11T12:27:56Z",
      "side": 1,
      "message": "I now explicitly mention that these are not covered.",
      "parentUuid": "3b5cb330_d543bf22",
      "range": {
        "startLine": 58,
        "startChar": 33,
        "endLine": 58,
        "endChar": 63
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da9e93f0_c82cb079",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-06-30T13:48:40Z",
      "side": 1,
      "message": "Surely there are other cases too, not just optional fields? What about pattern constraints? What about referring to fields in open structs, such as:\n\n```\na: {\n\tx: _\n\ty: try x.a? else \"fallback\"\n}\n```\n\nThe above seems like it should probably be fine to me, but the description wouldn\u0027t cover that kind of usage.",
      "range": {
        "startLine": 59,
        "startChar": 130,
        "endLine": 59,
        "endChar": 179
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54c2d068_74e946dc",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-07-11T12:27:56Z",
      "side": 1,
      "message": "clarified.",
      "parentUuid": "da9e93f0_c82cb079",
      "range": {
        "startLine": 59,
        "startChar": 130,
        "endLine": 59,
        "endChar": 179
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04ddb561_39517339",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-06-30T13:48:40Z",
      "side": 1,
      "message": "I don\u0027t really understand what this means.",
      "range": {
        "startLine": 61,
        "startChar": 229,
        "endLine": 61,
        "endChar": 267
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03ca2195_962fbb22",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-07-11T12:27:56Z",
      "side": 1,
      "message": "Tried to clarify. Still abstract, but details are not that important.",
      "parentUuid": "04ddb561_39517339",
      "range": {
        "startLine": 61,
        "startChar": 229,
        "endLine": 61,
        "endChar": 267
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2c7fb8f_2d2ce1f2",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-06-30T13:48:40Z",
      "side": 1,
      "message": "This doesn\u0027t seem quite right to me. `field` is syntactically distinct from `x.field` and `x[expr]`. We could say `expr?` but then we\u0027d have to distinguish the various allowed expression forms.",
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f107339_eb279826",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-07-11T12:27:56Z",
      "side": 1,
      "message": "Clarified.",
      "parentUuid": "e2c7fb8f_2d2ce1f2",
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7a58c31_8834310b",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-06-30T13:48:40Z",
      "side": 1,
      "message": "It would be good to be precise about what \"undefined\" means here. Because somehow, an optional field is \"undefined\" by this definition but a required field is not? Oh no, that\u0027s not right, because an actual defined field causes the operation to proceed without error too. So a required field is somehow more undefined than an optional field?\n\nAlso, I wonder whether \"undefined\" is enough. What if we\u0027re trying to refer into a non-struct value (something I\u0027ve definitely used the current disjunction-with-defaults idiom for previously)? For example:\n\n```\n#List: {\n\titem!: int\n\tnext!: null | #List\n}\n\nx: #List \u0026 {item: 4, next: null}\n\ny: try x.next.item? else \"not enough items in list\"\n```\n\nI think that should probably be fine, but I think we need to delineate the boundaries between \"undefined\" and \"error\" a little more explicitly to make it clear that\u0027s OK.",
      "range": {
        "startLine": 68,
        "startChar": 85,
        "endLine": 68,
        "endChar": 97
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8073af1d_f2362cd7",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-07-11T12:27:56Z",
      "side": 1,
      "message": "undefined means it is not declared and is not a constraint). To me required fields and optional fields are both constraints (that is how the spec defines it as well), and thus are undefined.",
      "parentUuid": "d7a58c31_8834310b",
      "range": {
        "startLine": 68,
        "startChar": 85,
        "endLine": 68,
        "endChar": 97
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a5fc862_3d68c278",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2025-07-07T14:30:57Z",
      "side": 1,
      "message": "Could you clarify if using the `?` postfix on non-optional fields is allowed? For example, would it work on regular and required fields? And if it is permitted, does it do anything useful at all?",
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67622670_b9e9026a",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-07-11T12:27:56Z",
      "side": 1,
      "message": "It should be permitted, but a a `cue vet` or `cue lint` could complain about it.\n\nIt should be permitted, as the referenced field may be in an external template, for instance, that may be optional now, but could later become non-optional. I think you would not want the code break in such a case.\n\nClarified that in the doc.",
      "parentUuid": "6a5fc862_3d68c278",
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f66e4ae2_e007777b",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-06-30T13:48:40Z",
      "side": 1,
      "message": "Could this be just `Expression`? Does it actually _need_ to be `StructLit`?",
      "range": {
        "startLine": 77,
        "startChar": 49,
        "endLine": 77,
        "endChar": 65
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "808ac957_c6f7ec3a",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-07-11T12:27:56Z",
      "side": 1,
      "message": "I think this may lead to ambiguity. It seemed safer to restrict it now and worry about relaxing it later, if possible.",
      "parentUuid": "f66e4ae2_e007777b",
      "range": {
        "startLine": 77,
        "startChar": 49,
        "endLine": 77,
        "endChar": 65
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c3d82a2_f83d79be",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-06-30T13:48:40Z",
      "side": 1,
      "message": "This is never referred to, so it\u0027s not clear how it fits into the grammar.\n\nAlso, do you actually intend all the arguments to be optional? And I think Expr should be Expression.\n\nMaybe you actually intended something like this?\n\n\n```suggestion\n      TryClause.          \u003d \"try\" [ identifier \"\u003d\" ] Expression .\n```",
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "914bf0e6_1c9dbfe7",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-07-11T12:27:56Z",
      "side": 1,
      "message": "Good point, referred to it now.\n\nYes, this was intentional. There are basicaly two forms. If `try` is the last element, the StructLit of the comprehension takes the role of its value:\n\ntry { a: b.c? }\n\nThe other form is if it is not the last clause: \n\ntry x \u003d a.b? { c: x }",
      "parentUuid": "7c3d82a2_f83d79be",
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e08a48d9_a47b2324",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-06-30T13:48:40Z",
      "side": 1,
      "message": "assing?",
      "range": {
        "startLine": 87,
        "startChar": 114,
        "endLine": 87,
        "endChar": 120
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02c00e4c_324abc80",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-06-30T13:48:40Z",
      "side": 1,
      "message": "Can\u0027t it be used in other parts of the comprehension too? If not, why not? I\u0027d presume that almost the same rules would apply here as if the try clause was used as a regular expression (for example, if multiple clauses are involved, they\u0027re unified together) but it might be good to make that clear.",
      "range": {
        "startLine": 87,
        "startChar": 159,
        "endLine": 87,
        "endChar": 193
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbc135ef_9bc9032e",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2025-07-07T14:30:57Z",
      "side": 1,
      "message": "🫏",
      "parentUuid": "e08a48d9_a47b2324",
      "range": {
        "startLine": 87,
        "startChar": 114,
        "endLine": 87,
        "endChar": 120
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c87c5a49_24d4ff9d",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-07-11T12:27:56Z",
      "side": 1,
      "message": "Yes, the point is that `x \u003d Expression` may be dropped if it is at the end.",
      "parentUuid": "02c00e4c_324abc80",
      "range": {
        "startLine": 87,
        "startChar": 159,
        "endLine": 87,
        "endChar": 193
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b712bf6d_527fbe06",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-07-11T12:27:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bbc135ef_9bc9032e",
      "range": {
        "startLine": 87,
        "startChar": 114,
        "endLine": 87,
        "endChar": 120
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54bc88fe_45a0788a",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-06-30T13:48:40Z",
      "side": 1,
      "message": "I don\u0027t understand what \"becoming generally available\" means here.",
      "range": {
        "startLine": 88,
        "startChar": 24,
        "endLine": 88,
        "endChar": 51
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75402d39_dd5a1e67",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2025-07-07T14:30:57Z",
      "side": 1,
      "message": "I also worry that this might lead to people thinking they will be able to use `if x {...} else {...}`, if they read this to mean `else` will become a general feature for comprehensions in the language.\n\nEdit: seeing the end of the document, now I\u0027m confused if you are actually adding support for if-else as part of this proposal. Please clarify one way or another, and if you\u0027re adding support, I\u0027d add an example too for the sake of clarity.",
      "parentUuid": "54bc88fe_45a0788a",
      "range": {
        "startLine": 88,
        "startChar": 24,
        "endLine": 88,
        "endChar": 51
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b97f18c_7dbf101b",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-07-11T12:27:56Z",
      "side": 1,
      "message": "I have some trepedations about it, but ultimately it makes sense to support it. Ideally, we should at least have some switch-like construct to allow users to avoid nesting. Nickel has a match construct which is quite nice and could work for CUE with some adaptations.",
      "parentUuid": "75402d39_dd5a1e67",
      "range": {
        "startLine": 88,
        "startChar": 24,
        "endLine": 88,
        "endChar": 51
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbb526ae_8a0bb3dc",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-06-30T13:48:40Z",
      "side": 1,
      "message": "Do you actually mean \"expression\" here? I\u0027m trying to think of places where a \"field value\" is different from a regular expression.\n\nFor example, I _think_ this would be OK, but it\u0027s not clear from the text if it would:\n\n```\nstrconv.Atoi(try a.b? else {\"0\"})\n```",
      "range": {
        "startLine": 89,
        "startChar": 51,
        "endLine": 89,
        "endChar": 72
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9c32ef8_39b9f961",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-07-11T12:27:56Z",
      "side": 1,
      "message": "I did mean field value. But that would perhaps be a nice extension perhaps. My initial thought was to not bury conditional flow.",
      "parentUuid": "dbb526ae_8a0bb3dc",
      "range": {
        "startLine": 89,
        "startChar": 51,
        "endLine": 89,
        "endChar": 72
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dcf1add7_9233de0b",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-06-30T13:48:40Z",
      "side": 1,
      "message": "I don\u0027t really understand what \"including a result in the configuration\" means in the context of a comprehension.",
      "range": {
        "startLine": 91,
        "startChar": 59,
        "endLine": 91,
        "endChar": 106
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99934d59_b63839b9",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-06-30T13:48:40Z",
      "side": 1,
      "message": "Shouldn\u0027t this distinguish between `?`-guarded expressions and other expressions?",
      "range": {
        "startLine": 91,
        "startChar": 11,
        "endLine": 91,
        "endChar": 49
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25604ab3_1c32d597",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-07-11T12:27:56Z",
      "side": 1,
      "message": "added qualifier",
      "parentUuid": "99934d59_b63839b9",
      "range": {
        "startLine": 91,
        "startChar": 11,
        "endLine": 91,
        "endChar": 49
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5297f4fa_9074124e",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-07-11T12:27:56Z",
      "side": 1,
      "message": "Rephrased using the language for comprehension in the spec.",
      "parentUuid": "dcf1add7_9233de0b",
      "range": {
        "startLine": 91,
        "startChar": 59,
        "endLine": 91,
        "endChar": 106
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad127181_b2b048f2",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-06-30T13:48:40Z",
      "side": 1,
      "message": "It would be good to have an example of this.",
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8aa4a7af_cc2173cf",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-07-11T12:27:56Z",
      "side": 1,
      "message": "Done, although there is a separate section with examples, which makes it a bit redundant.",
      "parentUuid": "ad127181_b2b048f2",
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2204527_0b09d1b5",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-06-30T13:48:40Z",
      "side": 1,
      "message": "It would be nice to have example output as well as the explanatory text, just to nail things down.",
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8981253c_2bc9e49d",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 134,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-06-30T13:48:40Z",
      "side": 1,
      "message": "This makes it seem like \"condition\" is a literal somewhere, but it\u0027s not.",
      "range": {
        "startLine": 134,
        "startChar": 44,
        "endLine": 134,
        "endChar": 55
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03ce9962_54aaae97",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 134,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-07-11T12:27:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8981253c_2bc9e49d",
      "range": {
        "startLine": 134,
        "startChar": 44,
        "endLine": 134,
        "endChar": 55
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c8b146f_b82c462b",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-06-30T13:48:40Z",
      "side": 1,
      "message": "Again, this would be way clearer with actual example input and output rather than just describing the behaviour in words.",
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "395a37c6_77734129",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-07-11T12:27:56Z",
      "side": 1,
      "message": "expanded.",
      "parentUuid": "8c8b146f_b82c462b",
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "495a1835_6fa3930d",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-06-30T13:48:40Z",
      "side": 1,
      "message": "None of these seems like they add much overall value to the proposal.",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 153,
        "endChar": 0
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9008021c_618370c5",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2025-07-07T14:30:57Z",
      "side": 1,
      "message": "this comment is below 153, i.e. the \"future extensions\" section, but highlights 149-151, part of the previous section. Which section are you referring to here?",
      "parentUuid": "495a1835_6fa3930d",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 153,
        "endChar": 0
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1daa383_508bf1de",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-07-11T12:27:56Z",
      "side": 1,
      "message": "Removed highlighed part.",
      "parentUuid": "9008021c_618370c5",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 153,
        "endChar": 0
      },
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a251365_265964ea",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2025-06-30T13:48:40Z",
      "side": 1,
      "message": "It would be nice to be a bit clearer about what we mean by \"brittle\" CUE, as it\u0027s the first time the term has been used. It might even be good to talk about that as part of the overall motivation near the top of the doc.",
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d633c8f_a5e2e32e",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-07-11T12:27:56Z",
      "side": 1,
      "message": "Reworded. We could also remove it, as `try` is actually not essential for this. It just makes it nicer.",
      "parentUuid": "1a251365_265964ea",
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd41eb7e_73567704",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 196,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2025-07-07T14:30:57Z",
      "side": 1,
      "message": "Personally, I don\u0027t think a conclusion at the end of a proposal doc helps. Any high level summary should already be at the very top, as part of the objective or abstract. Having anything here is either repetitive, or buried beneath lots of detail.",
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe57d387_825ad1f6",
        "filename": "designs/language/xxxx-try.md",
        "patchSetId": 1
      },
      "lineNbr": 196,
      "author": {
        "id": 1013536
      },
      "writtenOn": "2025-07-11T12:27:56Z",
      "side": 1,
      "message": "Removed conclusions.",
      "parentUuid": "cd41eb7e_73567704",
      "revId": "28aea5eb2494335d0fe899bbcb58b6c5f8335a9d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}