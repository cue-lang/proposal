{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c102acf4_b06fadc9",
        "filename": "designs/modules.v3/2939-modules.md",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-13T20:15:12Z",
      "side": 1,
      "message": "This section and the overview needs to make clear that the modules proposal is not tied to the central registry. That the central registry exists as a well-known place for well-known schemas for well-known services, software etc.",
      "revId": "a1f218016e8a8346de07b9f65e2fc086ec8608ab",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9e93f9a_46a0a0fc",
        "filename": "designs/modules.v3/2939-modules.md",
        "patchSetId": 7
      },
      "lineNbr": 14,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-13T20:24:21Z",
      "side": 1,
      "message": "This point seems to suggest the CUE modules proposal is entirely or tied to a central registry. That is not the case so we need to fix this sentence.",
      "range": {
        "startLine": 13,
        "startChar": 1,
        "endLine": 14,
        "endChar": 46
      },
      "revId": "a1f218016e8a8346de07b9f65e2fc086ec8608ab",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0319c4c9_36985ebc",
        "filename": "designs/modules.v3/2939-modules.md",
        "patchSetId": 7
      },
      "lineNbr": 26,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-13T20:24:21Z",
      "side": 1,
      "message": "Feels like it\u0027s worth mentioning `cue/load` here?",
      "range": {
        "startLine": 25,
        "startChar": 15,
        "endLine": 26,
        "endChar": 31
      },
      "revId": "a1f218016e8a8346de07b9f65e2fc086ec8608ab",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f848ffc2_765bac27",
        "filename": "designs/modules.v3/2939-modules.md",
        "patchSetId": 7
      },
      "lineNbr": 113,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-13T20:47:45Z",
      "side": 1,
      "message": "I think one big point we are missing here is calling out companies heavily rely on a registry based approach already for various artefacts. So there are ~zero new concepts involved when it comes to working with CUE modules.",
      "revId": "a1f218016e8a8346de07b9f65e2fc086ec8608ab",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5ee1d7d_4140d0f8",
        "filename": "designs/modules.v3/2939-modules.md",
        "patchSetId": 7
      },
      "lineNbr": 113,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-13T21:00:21Z",
      "side": 1,
      "message": "Building on this a bit more. I think we should refer to the OCI-based nature of the design more. In an earlier revision things were not OCI-based. Feedback (from people who do lots with OCI registries) caused that shift. We should call it out more here. \n\nFor example, the ability to mirror etc artefacts between OCI registries: lots of tooling makes that trivially possible.",
      "parentUuid": "f848ffc2_765bac27",
      "revId": "a1f218016e8a8346de07b9f65e2fc086ec8608ab",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a358220_fc181237",
        "filename": "designs/modules.v3/2939-modules.md",
        "patchSetId": 7
      },
      "lineNbr": 165,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-13T20:38:01Z",
      "side": 1,
      "message": "Per offline discussion with @rogpeppe@gmail.com and quoting him:\n\n\u003e We should explicitly talk about the separation between module path and storage location.\n\u003e \n\u003e essentially a module path is an abstraction where a storage location is concrete, and the registry configuration defines the mapping between them",
      "revId": "a1f218016e8a8346de07b9f65e2fc086ec8608ab",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e90b716b_14b304c8",
        "filename": "designs/modules.v3/2939-modules.md",
        "patchSetId": 7
      },
      "lineNbr": 325,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-13T21:15:32Z",
      "side": 1,
      "message": "We don\u0027t appear to call out that existing `cmd/cue` commands will \"just work\" with modules. Hopefully obvious, but perhaps worth calling out in any case?",
      "revId": "a1f218016e8a8346de07b9f65e2fc086ec8608ab",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2edd51f_59077fd2",
        "filename": "designs/modules.v3/2939-modules.md",
        "patchSetId": 7
      },
      "lineNbr": 328,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-13T21:15:32Z",
      "side": 1,
      "message": "This list appears to miss of `login`?",
      "revId": "a1f218016e8a8346de07b9f65e2fc086ec8608ab",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb0cc125_eba432e8",
        "filename": "designs/modules.v3/2939-modules.md",
        "patchSetId": 7
      },
      "lineNbr": 331,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-13T21:15:32Z",
      "side": 1,
      "message": "No content below this heading?",
      "revId": "a1f218016e8a8346de07b9f65e2fc086ec8608ab",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f3701bc_102b5810",
        "filename": "designs/modules.v3/2939-modules.md",
        "patchSetId": 7
      },
      "lineNbr": 334,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-13T21:15:32Z",
      "side": 1,
      "message": "This heading appears to be out of place under a higher-level heading of \"cue command extensions\"? Not least because the cache isn\u0027t specific per se to `cmd/cue`.",
      "revId": "a1f218016e8a8346de07b9f65e2fc086ec8608ab",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6122ed3e_8d5102d3",
        "filename": "designs/modules.v3/2939-modules.md",
        "patchSetId": 7
      },
      "lineNbr": 408,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-13T20:14:06Z",
      "side": 1,
      "message": "Mention `cue/load` changes here?",
      "revId": "a1f218016e8a8346de07b9f65e2fc086ec8608ab",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d134fe4_8e752ec2",
        "filename": "designs/modules.v3/2939-modules.md",
        "patchSetId": 7
      },
      "lineNbr": 434,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-13T20:21:08Z",
      "side": 1,
      "message": "I think we can flesh this out a bit more to discuss that the experiment will help support this proposal, by giving us real world experience etc.\n\nThen, assuming the experiment is successful, we will accept the proposal, at which point we will make modules a first class citizen of `cmd/cue` and the Go API, and `CUE_EXPERIMENT` will \"disappear\".\n\nPerhaps also make the point that this proposal represents the core of a modules design, and whilst the experiment might not fully implement the proposal, it is aimed to do the minimum amount to give us confidence in any decision we then reach with respect to the proposal.\n\nThoughts?",
      "revId": "a1f218016e8a8346de07b9f65e2fc086ec8608ab",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7a4c6f3_0ed8294b",
        "filename": "designs/modules.v3/2939-modules.md",
        "patchSetId": 7
      },
      "lineNbr": 434,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-13T21:15:32Z",
      "side": 1,
      "message": "I mention these points largely because we had someone respond on Slack with the question \"so modules will still be experimental in v0.8.0?\"",
      "parentUuid": "9d134fe4_8e752ec2",
      "revId": "a1f218016e8a8346de07b9f65e2fc086ec8608ab",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef24a43b_0fbff4f7",
        "filename": "designs/modules.v3/2941-modules-storage-model.md",
        "patchSetId": 7
      },
      "lineNbr": 27,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-13T20:26:24Z",
      "side": 1,
      "message": "I think that we are now specific about that: we talk about the OCI protocol in the main document.",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 27,
        "endChar": 51
      },
      "revId": "a1f218016e8a8346de07b9f65e2fc086ec8608ab",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3203ac6_af79f73c",
        "filename": "designs/modules.v3/2941-modules-storage-model.md",
        "patchSetId": 7
      },
      "lineNbr": 38,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-03-13T20:31:57Z",
      "side": 1,
      "message": "Ground this with mention of popular OCI registries? \n\nThat GitLab, AWS, Google, GitHub, ... those we have encountered during the experiment thus far?",
      "revId": "a1f218016e8a8346de07b9f65e2fc086ec8608ab",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}