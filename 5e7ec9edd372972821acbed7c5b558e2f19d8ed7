{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "788b565a_d3b078db",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-04-11T05:30:11Z",
      "side": 1,
      "message": "LGTM, but I defer to Marcel for final review. Specifically, I know you were both going backwards and forwards a bit on the naming of the field.",
      "revId": "5e7ec9edd372972821acbed7c5b558e2f19d8ed7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fa89c41_2a716d46",
        "filename": "designs/modules.v3/3017-module-files.md",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1017720
      },
      "writtenOn": "2024-04-11T07:08:10Z",
      "side": 1,
      "message": "Gating any algorithm changes via a semver version in cue.mod definitely sounds right to me. Otherwise reproducibility over time would be rather difficult.\n\nWe only have one such version today, `language.version`, so we almost don\u0027t have a choice in terms of what version we use for this logic.\n\n`language.version` doesn\u0027t seem like a bad choice overall, although strictly speaking the spec language version and the \"packaging\" or \"releasing\" version don\u0027t need to be the same. As a library author I might want to write against the v0.7.0 language spec via `language.version\u003d0.7.0`, making that CUE version the minimum for my library downstreams, but I might want to opt into newer behavior such as a newer algorithm to dictate what files get included in my module zip, via e.g. `target.version\u003d0.9.0`.\n\nI don\u0027t think we need to decide right now, all I want to point out is that we don\u0027t _have_ to tie this to `language.version`. We might later choose to use a different semver version field inside cue.mod.",
      "revId": "5e7ec9edd372972821acbed7c5b558e2f19d8ed7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d50b946b_d75feb06",
        "filename": "designs/modules.v3/3017-module-files.md",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-04-11T15:58:45Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "4fa89c41_2a716d46",
      "revId": "5e7ec9edd372972821acbed7c5b558e2f19d8ed7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eea8c6e5_b66dfb98",
        "filename": "designs/modules.v3/3017-module-files.md",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-04-11T05:30:11Z",
      "side": 1,
      "message": "Please be specific here and say \"When `vcs` is `git`, ...\" Because it\u0027s ambiguous whether not setting the field also counts as it not being `none`, and in any case the behaviour we are describing is, for now at least, specific to `git`.",
      "revId": "5e7ec9edd372972821acbed7c5b558e2f19d8ed7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "27a3a9e8_e3daca02",
        "filename": "designs/modules.v3/3017-module-files.md",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-04-11T15:58:45Z",
      "side": 1,
      "message": "I\u0027d like us to be able to add support for more VCS systems without enumerating them all in this sentence. I\u0027ve changed the wording a bit to take your suggestion into account.",
      "parentUuid": "eea8c6e5_b66dfb98",
      "revId": "5e7ec9edd372972821acbed7c5b558e2f19d8ed7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa10654b_62651b76",
        "filename": "designs/modules.v3/3017-module-files.md",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-04-11T05:30:11Z",
      "side": 1,
      "message": "`source.vcs` I think is what you meant here, otherwise it\u0027s confusing?",
      "revId": "5e7ec9edd372972821acbed7c5b558e2f19d8ed7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd2c747a_00216d53",
        "filename": "designs/modules.v3/3017-module-files.md",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-04-11T15:58:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fa10654b_62651b76",
      "revId": "5e7ec9edd372972821acbed7c5b558e2f19d8ed7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd18d17c_c9b73743",
        "filename": "designs/modules.v3/3017-module-files.md",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-04-11T05:30:11Z",
      "side": 1,
      "message": "I would add a follow-on here, to say that the introduction of heuristics to guide default behaviour and the smoothing of any rough edges (better language than that!) will be guided by real world experience with the implementation.",
      "revId": "5e7ec9edd372972821acbed7c5b558e2f19d8ed7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b69297ff_8b492909",
        "filename": "designs/modules.v3/3017-module-files.md",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-04-11T15:58:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cd18d17c_c9b73743",
      "revId": "5e7ec9edd372972821acbed7c5b558e2f19d8ed7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f84a2f7_635f24b7",
        "filename": "designs/modules.v3/3017-module-files.md",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1017723
      },
      "writtenOn": "2024-04-11T05:30:11Z",
      "side": 1,
      "message": "Missing space following `.`.",
      "range": {
        "startLine": 158,
        "startChar": 44,
        "endLine": 158,
        "endChar": 45
      },
      "revId": "5e7ec9edd372972821acbed7c5b558e2f19d8ed7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "56a9afbb_a0f5b0a0",
        "filename": "designs/modules.v3/3017-module-files.md",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1007275
      },
      "writtenOn": "2024-04-11T15:58:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1f84a2f7_635f24b7",
      "range": {
        "startLine": 158,
        "startChar": 44,
        "endLine": 158,
        "endChar": 45
      },
      "revId": "5e7ec9edd372972821acbed7c5b558e2f19d8ed7",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735"
    }
  ]
}